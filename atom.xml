<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>以写作调身心</title>
  
  <subtitle>熟能生巧，勤能补拙；念念不忘，必有回响。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://octopuslian.github.io/"/>
  <updated>2020-10-19T00:37:33.992Z</updated>
  <id>https://octopuslian.github.io/</id>
  
  <author>
    <name>Neo Zhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cooking_新疆手抓饭</title>
    <link href="https://octopuslian.github.io/2020/10/19/cooking-xin-jiang-shou-zhua-fan/"/>
    <id>https://octopuslian.github.io/2020/10/19/cooking-xin-jiang-shou-zhua-fan/</id>
    <published>2020-10-19T00:28:32.000Z</published>
    <updated>2020-10-19T00:37:33.992Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><p>国庆期间去了一家新疆人开的新疆饭馆吃抓饭，一点也不正宗，尽是米饭，还是自己动手丰衣足食。</p><h2 id="准备食材"><a href="#准备食材" class="headerlink" title="准备食材"></a>准备食材</h2><p>红萝卜两根，（皮牙子）洋葱一个，鸡翅根７-８个，盛一碗米饭泡着。</p><p>红萝卜切成条，洋葱切成片，鸡肉切成块。</p><h2 id="开炒"><a href="#开炒" class="headerlink" title="开炒"></a>开炒</h2><p>倒入油，倒多一些，放入鸡肉翻炒，加盐一勺，加花椒粉一勺，加孜然粉一勺，肉炒3-5分钟后加入洋葱和胡萝卜，加盐两勺，翻炒至7-8分熟关火，将炒好的菜倒入电饭煲中。</p><p><img src="/2020/10/19/cooking-xin-jiang-shou-zhua-fan/1.jpg" alt></p><h2 id="蒸饭"><a href="#蒸饭" class="headerlink" title="蒸饭"></a>蒸饭</h2><p>倒入米粉，加水，合上电饭锅，开始蒸，等结束后开锅加入鸡精再翻一下。</p><p><img src="/2020/10/19/cooking-xin-jiang-shou-zhua-fan/2.jpg" alt></p><h2 id="出锅"><a href="#出锅" class="headerlink" title="出锅"></a>出锅</h2><p><img src="/2020/10/19/cooking-xin-jiang-shou-zhua-fan/3.jpg" alt></p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;p&gt;国庆期间去了一家新疆人开的新疆饭馆吃抓饭，一点也不正宗，尽是米饭，还是自己动手丰衣足食。&lt;/p&gt;&lt;h2 id=&quot;准备食材&quot;&gt;&lt;a href=&quot;#准备食材&quot; 
      
    
    </summary>
    
    
      <category term="厨艺学习" scheme="https://octopuslian.github.io/categories/%E5%8E%A8%E8%89%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="厨艺" scheme="https://octopuslian.github.io/tags/%E5%8E%A8%E8%89%BA/"/>
    
      <category term="大盘鸡" scheme="https://octopuslian.github.io/tags/%E5%A4%A7%E7%9B%98%E9%B8%A1/"/>
    
      <category term="新疆" scheme="https://octopuslian.github.io/tags/%E6%96%B0%E7%96%86/"/>
    
  </entry>
  
  <entry>
    <title>Kindle下载电子书的方法</title>
    <link href="https://octopuslian.github.io/2020/10/19/kindle-download-books-usage/"/>
    <id>https://octopuslian.github.io/2020/10/19/kindle-download-books-usage/</id>
    <published>2020-10-19T00:22:10.000Z</published>
    <updated>2020-10-19T00:28:50.084Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><p>周末尝试下载书籍的方法，在此做一整理：</p><h2 id="方法一，在亚马逊商城下载"><a href="#方法一，在亚马逊商城下载" class="headerlink" title="方法一，在亚马逊商城下载"></a>方法一，在亚马逊商城下载</h2><p>只要kindle绑定了亚马逊账号，在亚马逊购买的书籍就可以在kindle上阅读。</p><h2 id="方法二，用数据线"><a href="#方法二，用数据线" class="headerlink" title="方法二，用数据线"></a>方法二，用数据线</h2><p>用和kindle匹配的数据线连接到电脑上，然后将电子书拖到kindle的文件盘里。</p><p>但是需要注意，kindle连电脑完全看数据线心情。</p><h2 id="方法三，（推荐）用邮箱推送"><a href="#方法三，（推荐）用邮箱推送" class="headerlink" title="方法三，（推荐）用邮箱推送"></a>方法三，（推荐）用邮箱推送</h2><ul><li>先登录亚马逊官方账号，在我的设备里找到一个***kindle.cn的邮箱地址，复制下来；</li><li>在设置里将自己的邮箱，比如我的***.@qq.com设置为可以信任的邮箱；</li><li>打开邮件发送页面，将要下载的书籍添加到邮件附件里，点击发送，然后kindle连上wifi，一分钟左右新的书籍就出来了。</li></ul><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;p&gt;周末尝试下载书籍的方法，在此做一整理：&lt;/p&gt;&lt;h2 id=&quot;方法一，在亚马逊商城下载&quot;&gt;&lt;a href=&quot;#方法一，在亚马逊商城下载&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://octopuslian.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="下载书籍" scheme="https://octopuslian.github.io/tags/%E4%B8%8B%E8%BD%BD%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="kindle" scheme="https://octopuslian.github.io/tags/kindle/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-1512 number of good pairs | 好数对的数目</title>
    <link href="https://octopuslian.github.io/2020/10/05/Leetcode-1512-number-of-good-pairs/"/>
    <id>https://octopuslian.github.io/2020/10/05/Leetcode-1512-number-of-good-pairs/</id>
    <published>2020-10-05T00:32:52.000Z</published>
    <updated>2020-10-05T00:36:37.700Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://leetcode-cn.com/problems/number-of-good-pairs/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/number-of-good-pairs/</a></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="方法一，暴力法"><a href="#方法一，暴力法" class="headerlink" title="方法一，暴力法"></a>方法一，暴力法</h3><p>先声明一个计数值<code>count</code>作为返回的结果，然后从数组下标０开始，挨个遍历下标０之后的值，接着做判断，如果两个值相等就将<code>count</code>加１，否则继续循环，直到结束返回<code>count</code>值即可。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numIdenticalPairs</span><span class="params">(nums []<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">//暴力法</span></span><br><span class="line">    count := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i,x := <span class="keyword">range</span> nums &#123;</span><br><span class="line">        <span class="keyword">for</span> j := i + <span class="number">1</span>;j &lt; <span class="built_in">len</span>(nums);j++ &#123;</span><br><span class="line">            <span class="keyword">if</span> x == nums[j] &#123;</span><br><span class="line">                count++</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h2&gt;&lt;p&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://octopuslian.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="leetcode" scheme="https://octopuslian.github.io/tags/leetcode/"/>
    
      <category term="暴力求解" scheme="https://octopuslian.github.io/tags/%E6%9A%B4%E5%8A%9B%E6%B1%82%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode_771_jewels_and_stones | 宝石与石头</title>
    <link href="https://octopuslian.github.io/2020/10/02/Leetcode-771-jewels-and-stones/"/>
    <id>https://octopuslian.github.io/2020/10/02/Leetcode-771-jewels-and-stones/</id>
    <published>2020-10-02T03:16:21.000Z</published>
    <updated>2020-10-02T03:26:24.663Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://leetcode-cn.com/problems/jewels-and-stones/" target="_blank" rel="noopener">jewels-and-stones</a></p><h2 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h2><h3 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h3><p>两个<code>for</code>循环，暴力求解</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(J <span class="keyword">string</span>, S <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    count := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _,s := <span class="keyword">range</span> S &#123;</span><br><span class="line">        <span class="keyword">for</span> _,j := <span class="keyword">range</span> J &#123;</span><br><span class="line">            <span class="keyword">if</span> s == j &#123;</span><br><span class="line">                count++</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>一个<code>for</code>循环和一个<code>map</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(J <span class="keyword">string</span>, S <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    jewels := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">rune</span>]<span class="keyword">bool</span>)</span><br><span class="line">    <span class="keyword">for</span> _, j := <span class="keyword">range</span> J &#123;</span><br><span class="line">        jewels[j] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    count := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _, s := <span class="keyword">range</span> S &#123;</span><br><span class="line">        <span class="keyword">if</span> jewels[s] &#123;</span><br><span class="line">            count ++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h2&gt;&lt;p&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://octopuslian.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="leetcode" scheme="https://octopuslian.github.io/tags/leetcode/"/>
    
      <category term="循环" scheme="https://octopuslian.github.io/tags/%E5%BE%AA%E7%8E%AF/"/>
    
      <category term="哈希表" scheme="https://octopuslian.github.io/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何决断一家公司是否值得去为之工作</title>
    <link href="https://octopuslian.github.io/2020/09/09/how-to-decide-whether-a-company-is-worth-going-to-work/"/>
    <id>https://octopuslian.github.io/2020/09/09/how-to-decide-whether-a-company-is-worth-going-to-work/</id>
    <published>2020-09-09T13:45:11.000Z</published>
    <updated>2020-09-09T14:10:26.067Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><p>昨天下午，我意外在朋友圈看到一位之前在上海EA做图形渲染的前辈，跳槽去了一家创业公司——鹰角网络，出于好奇，我询问其跳槽的原因，以下内容采取对话形式展开：</p><p>————————————————————————————————————————————————————————————————————————————</p><p>Q：hello，老哥，您是从EA直接跳过去的吗？我有接到猎头邀请，问我是否考虑上海EA。<br>A：是的，EA挺好的，很正规。</p><p>Q：是什么原因去跳槽呢？<br>A：待遇更好，鹰角的产品已经做起来了，并且在扩张阶段。相比上海EA，鹰角产品更挣钱，也更肯投钱在员工身上。</p><p>Q：讲真我还没听过过这家公司，不过我看鹰角公司主页，说是大部分来自谷歌、无极黑的员工，所以我想看一家公司是否值得去，肯定有它的闪光点，耀眼到超过自己当前岗位的价值和意义。<br>A：《明日方舟》可以了解下，从趋利的角度讲，明日方舟首月5亿流水，现在差不多每月1亿，而之前在EA的项目每月1千万，并且腾讯拿大头。还有员工培训这点，今年的UWA开发者大会，鹰角买了20多张票给员工去参加，EA一般每年1-2张，今年1张，当然这也和EA主要用自研引擎有关。但其实EA也有的，比如买GDC各种视频，就是离用到生产还有点距离。</p><p>Q：怎么判断公司是否值得去呢？<br>A：待遇、项目、技术力、宣发能力，大致这些。</p><p>————————————————————————————————————————————————————————————————————————————</p><p>和他沟通完后，我陷入了沉思，突然想起我以前在一家上市游戏公司的时候，我旁边工位一位做客户端的同事，为了学习渲染，将一本厚厚的只有英文版的书籍打印下来看，领导看到后非但没有生气，反而对着全工作室人说谁能看完这本书奖励money，各种下午茶、比赛、讲座纷至沓来…。</p><p>然而我目前在另外一家公司所做的事，就只是简单的维护已有的业务逻辑，增删改查，沟通&gt;技术，没有任何成就感，各种无聊的需求以及奇葩的规定，让我逐渐麻木。</p><p>但是这位前辈提到的建议还是非常实用的，对我未来的职业规划起到一定的作用。</p><p>待遇占第一位，毕竟这是生存之根本；项目+技术力，这是历练和提升实力的关键；员工培养机制，这是发展前景的保障；节日礼物和福利，这是人情温暖的一大体现。</p><p><strong>我还年轻，还有更多的时间和机会找到自己喜欢做的事，希望那一天不会让我等太久。</strong></p><p><img src="/2020/09/09/how-to-decide-whether-a-company-is-worth-going-to-work/wait.jpg" alt></p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;p&gt;昨天下午，我意外在朋友圈看到一位之前在上海EA做图形渲染的前辈，跳槽去了一家创业公司——鹰角网络，出于好奇，我询问其跳槽的原因，以下内容采取对话形式展开：&lt;
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://octopuslian.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="上班" scheme="https://octopuslian.github.io/tags/%E4%B8%8A%E7%8F%AD/"/>
    
      <category term="选择" scheme="https://octopuslian.github.io/tags/%E9%80%89%E6%8B%A9/"/>
    
      <category term="价值" scheme="https://octopuslian.github.io/tags/%E4%BB%B7%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>国人皆如此，倭寇何敢</title>
    <link href="https://octopuslian.github.io/2020/08/21/every-chinese-like-this-how-dare-the-japanese-pirates/"/>
    <id>https://octopuslian.github.io/2020/08/21/every-chinese-like-this-how-dare-the-japanese-pirates/</id>
    <published>2020-08-21T14:16:07.000Z</published>
    <updated>2020-08-22T05:17:50.799Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><p>今天我看完了《八佰》这部抗日电影，感触很深，在此记录我的一些心理感受。</p><p>印象最深的是国军和日军打到白热化阶段时，日军的凿墙部队顶着钢板，扔手榴弹被弹开，中国军人不得不身体绑上炸弹，跳下去和日军同归于尽。这与《金陵十三钗》里中国军人以人数排成一列无限接近装甲车上让最后一个士兵在死前滚到装甲车的车轮子底下炸毁装甲车方法类似。</p><p>我庆幸我活在一个和平的年代，没有战争，父母健在，按时上下班。然而，屈辱的历史不应该被遗忘。</p><p>我记得我有个同事，去年去日本旅游，当地的日本人扔背地里叫他“支那人”，即使没有被叫成“支那猪”，但听着仍然叫人很不爽。区区的弹丸之国，还没有中国一个省大，为什么能如此嚣张？我想这部电影貌似已经告诉了我们答案。</p><p>这部电影的另一个我喜欢的点就是真实，越长大越想看到真实。</p><p>当如今被日本当做喜剧片的抗日神剧层出不穷，比如手撕鬼子，机枪打掉轰炸机，一箭射穿五个人，让我们这代是否产生了错觉，认为当年的日军是连滚带爬逃出中国的呢？事实并非如此，在对方装备先进，武士道精神（不知道是不是这个，反正就是类似天皇的意志在支配）的支配下，我军只能以人数去怼。我想这或许才是真实的战争。</p><p>另外我不明白为什么有人总是带着有色眼睛来看这部电影，比如煽情，在我看来它真实表现了当时军队的想法。活着的怕死，伤的动弹不得的想给个痛快。这部电影节奏很快，尤其是打仗，哪里有缺口就需要赶紧补上，当补不上的时候，只有有命去补，但当你准备牺牲自己的生命时，你是否想到家里正在盼儿归来的父母，是否想到自己的妻子和孩子，然而你知道希望渺茫，只能对天嘶吼一声：“娘，俺走了，儿不孝！” 如果我在十楼往下跳，我想我会让时间过得慢一些，多说几句话。</p><p>电影的最后，大家知道再对抗下去全都得死，于是往英租区跑，能活一个是一个，在这里也有鲜明的对比，比如刚开始四行仓库打仗，对面人就跟看热闹似的——哇哦，好大的舞台，那里竟然死了人。到最后，民族觉醒，送吃的，送喝的，实在不行打上两枪也行。连英国人都忍不住开始补抢——他妈的日本人，去死吧。</p><p>当然，现在是和平年代，不打仗，都是经济战和人才战，但我们不应该忘记历史。我希望在我有生之年，可以看到我们中国人走出国门时，都是被人尊敬的，而不是听到“那里来了一个支那人”。</p><p>国人皆如此，倭寇何敢。</p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;p&gt;今天我看完了《八佰》这部抗日电影，感触很深，在此记录我的一些心理感受。&lt;/p&gt;&lt;p&gt;印象最深的是国军和日军打到白热化阶段时，日军的凿墙部队顶着钢板，扔手榴弹
      
    
    </summary>
    
    
      <category term="影评" scheme="https://octopuslian.github.io/categories/%E5%BD%B1%E8%AF%84/"/>
    
    
      <category term="八佰" scheme="https://octopuslian.github.io/tags/%E5%85%AB%E4%BD%B0/"/>
    
  </entry>
  
  <entry>
    <title>幻光</title>
    <link href="https://octopuslian.github.io/2020/08/09/phantom-light/"/>
    <id>https://octopuslian.github.io/2020/08/09/phantom-light/</id>
    <published>2020-08-09T14:46:50.000Z</published>
    <updated>2020-08-09T15:07:14.558Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><p>曾经我以为所有的生命都是被束缚的</p><p>只有终结才是自由的开始</p><p>可明明不想死</p><p>却没有活下去的理由</p><p>明明很想活着</p><p>却害怕活着的感觉</p><p>也许成为光照亮别人只是她跟我开的一个玩笑</p><p>你越想去忘记一切</p><p>却反而记得更清楚</p><p>那时的我是那么孤独又毫无价值</p><p>死对我来说</p><p>是那么的黑暗</p><p>又让人害怕</p><p>也许</p><p>有时帮你解开枷锁的并不是希望</p><p>也许绝望的尽头才是真正的新生</p><p>后来 我终于来到世界尽头</p><p>那里是最后一个光点</p><p>再过去就是深渊</p><p>它像一面镜子</p><p>我看到镜中的自己化为恶龙</p><p>纵然一切都是骗局</p><p>但我知道</p><p>凝视深渊</p><p>深渊必将回应凝视</p><p>谁也无法看到最初的世界</p><p>而真正的先知早就给特殊的灵魂准备了下达深远的梯子</p><p>是否 只有变成怪物，才能战胜怪物</p><p>是否 只有抛弃“我”才能变成光</p><p>只有活下去</p><p>才能知道答案</p><p>无论人们怎么变坏</p><p>世界都会照常运行</p><p>罪魁祸首玩弄着为希望献身的人们</p><p>一心只想冲破黑暗</p><p>却不知这一切 皆是枉然</p><p>无论弱者 如何哀叹鄙夷自己的软弱</p><p>终究无法逃离 悲惨的末路</p><p>没有人生来就拥有自由</p><p>假如无法挣脱</p><p>那就毁灭吧！</p><p>毁灭束缚你的一切</p><p>所有人都对黑暗的未来心存恐惧</p><p>但不到那一刻 又如何能知道</p><p>生也是“我”</p><p>死也是“我”</p><p>彻悟是“我”</p><p>答案是“我”</p><p>“我”才是救赎</p><p>“我”即是毁灭！</p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;p&gt;曾经我以为所有的生命都是被束缚的&lt;/p&gt;&lt;p&gt;只有终结才是自由的开始&lt;/p&gt;&lt;p&gt;可明明不想死&lt;/p&gt;&lt;p&gt;却没有活下去的理由&lt;/p&gt;&lt;p&gt;明明很想活着&lt;/
      
    
    </summary>
    
    
      <category term="影评" scheme="https://octopuslian.github.io/categories/%E5%BD%B1%E8%AF%84/"/>
    
    
      <category term="疯味英雄" scheme="https://octopuslian.github.io/tags/%E7%96%AF%E5%91%B3%E8%8B%B1%E9%9B%84/"/>
    
  </entry>
  
  <entry>
    <title>由FFmpeg合成视频静帧引发的协程未关闭的解决方案</title>
    <link href="https://octopuslian.github.io/2020/08/04/golang-merge-video-still-frame/"/>
    <id>https://octopuslian.github.io/2020/08/04/golang-merge-video-still-frame/</id>
    <published>2020-08-04T11:46:29.000Z</published>
    <updated>2020-08-04T12:27:49.987Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><h2 id="产生静帧的原因"><a href="#产生静帧的原因" class="headerlink" title="产生静帧的原因"></a>产生静帧的原因</h2><p>视频的长度比音频短 ——&gt; 为什么视频短？ ——&gt; 1，外部给的数据就少；2，内部合成的问题。</p><p>本文主要对7月底出现的一次静帧bug做详细的分析和给出的解决方案。</p><h2 id="回顾整个任务流程"><a href="#回顾整个任务流程" class="headerlink" title="回顾整个任务流程"></a>回顾整个任务流程</h2><ul><li>开始任务：上层服务通知开始做任务时，我根据数据合成最终视频后，通过<code>Redis</code>数据库告知上层服务我已经做完任务了。</li><li>结束任务：上层服务发送结束任务时，我立刻停掉所有正在进行的协程。</li></ul><h2 id="问题溯源"><a href="#问题溯源" class="headerlink" title="问题溯源"></a>问题溯源</h2><p>首先，我通过看日志发现：上层服务只调用了一次开始任务的请求，但我这里却<strong>重复做了任务</strong>，也就是一个人做了两次任务。</p><p>为什么呢？于是我根据日志查到源头，发现是这个循环检测<code>redis key</code>出了问题。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> redis_value <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"></span><br><span class="line">redis_value, _ = redis.String(c.Do(<span class="string">"GET"</span>, redis_key))</span><br><span class="line"></span><br><span class="line">Log.Info(GoID+<span class="string">": get redis value is: "</span>, redis_value)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(redis_value) == <span class="number">0</span> &#123;</span><br><span class="line">time.Sleep(time.Duration(<span class="number">15</span>) * time.Second)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           </span><br><span class="line">           <span class="keyword">var</span> filelist FileList</span><br><span class="line">Unerr := json.Unmarshal([]<span class="keyword">byte</span>(redis_value), &amp;filelist)</span><br><span class="line"><span class="keyword">if</span> Unerr != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">           Log.Info(GoID+<span class="string">": unmarshal filelist: "</span>, filelist)</span><br><span class="line">           </span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而本地测试后发现没问题，那么问题出在哪里呢？</p><p>后来我又看了日志，发现两个任务发的时间间隔很短，会不会是任务重了，导致同一个人开了两个协程，协程1在检测协程2已经生成的视频文件，结果视频还没有生成完，就送去做转场合成，导致最终的视频过短，从而产生静帧？</p><p>经过和上层服务的负责人沟通，确认他当时发第一次任务后忘记停止任务了，导致发第二次任务时，第一次任务还在循环检测<code>redis key</code>，最终两个任务一起做了。</p><p>于是他改了下代码，重新测试，但是问题还存在，这次主要集中在我这里，因为我发现<strong>即使上层服务发送了停止任务的请求，但我这里还是有协程在做检测redis key的活</strong>，所以最终问题确认为————发送了停止任务后，我这里没有及时关闭掉协程。</p><p>修改代码，使用<code>sync.WaitGroup</code>控制协程的数量：</p><p>person.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">wg := sync.WaitGroup&#123;&#125;  <span class="comment">//很重要</span></span><br><span class="line"></span><br><span class="line">stopdone := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line">   StopTaskChannelMapOp(taskid, <span class="string">"set"</span>, stopdone)</span><br><span class="line">   <span class="keyword">for</span> _, person := <span class="keyword">range</span> personredis &#123;</span><br><span class="line">   <span class="keyword">go</span> Task(stopdone,wg)  </span><br><span class="line">   <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-stopdone:</span><br><span class="line">Log.Info(<span class="string">"Stop Task"</span>, taskid)</span><br><span class="line">StopTaskChannelMapOp(taskid, <span class="string">"delete"</span>, stopdone)</span><br><span class="line"></span><br><span class="line">wg.Done()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">           &#125;()</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>task.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Task</span><span class="params">(stop <span class="keyword">chan</span> <span class="keyword">bool</span>,wg *sync.WaitGroup)</span></span> &#123;</span><br><span class="line">    wg.Add(<span class="number">1</span>)  <span class="comment">//很重要</span></span><br><span class="line">    <span class="keyword">defer</span> wg.Done()  <span class="comment">//很重要</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> redis_value <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">    t := time.NewTicker(<span class="number">15</span> * time.Second)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line"></span><br><span class="line">redis_value, _ = redis.String(c.Do(<span class="string">"GET"</span>, redis_key))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(redis_value) == <span class="number">0</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> &lt;-stop:</span><br><span class="line">            <span class="comment">//收到停止任务的请求后，直接结束这个协程</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> &lt;-t.C:</span><br><span class="line">            <span class="comment">//睡15s后继续检测redis key</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//unmarshal redis value</span></span><br><span class="line"><span class="keyword">var</span> filelist FileList</span><br><span class="line">Unerr := json.Unmarshal([]<span class="keyword">byte</span>(redis_value), &amp;filelist)</span><br><span class="line"><span class="keyword">if</span> Unerr != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Log.Info(GoID+<span class="string">": unmarshal filelist: "</span>, filelist)</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过测试，收到停止任务后即可结束正在做任务的协程。</p><h2 id="个人理解的sync-WaitGroup的用法"><a href="#个人理解的sync-WaitGroup的用法" class="headerlink" title="个人理解的sync.WaitGroup的用法"></a>个人理解的sync.WaitGroup的用法</h2><p>专业解释可以看官方文档或文章底部的参考资料，在此仅仅对我目前所用的<code>WaitGroup</code>做简单的理解，如有误差请及时提出来我好补充，感谢。</p><p><code>WaitGroup</code>就像是一个计数器，开一个协程，<code>Add</code>就会让计数器加1，当协程运行完或中间退出时，<code>Done</code>就会减1，但当你开了很多协程，但又不知道什么时候协程会全部结束时，就需要<code>Wait</code>等待所有协程结束。</p><p>而对于一些必须要及时退出协程的情况（比如我上述锁描述的情况），就需要用<code>channel</code>通知协程关闭，所以一定要在所有协程可能会退出的情况记得<code>Done</code>，或者使用<code>defer wg.Done</code>，否则<code>WaitGroup</code>这个“计数器”不为1，它就会一直卡住。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>遇到问题多想，多测试，多看日志，多分析；</li><li>实在找不到问题，可以和相关的负责人员沟通，一起寻找突破口；</li><li>一定要找到问题的本质，从根源解决，不要想着用一个应急方案先凑活，不然你会发现你的职业生涯就一直在和这类业务问题做斗争；</li><li><code>sync.WaitGroup</code>是让协程优雅退出的一种解决方式，那么是否还有其他让协程退出的方法呢？</li><li>所有看似匪夷所思的<code>Bug</code>，背后一定绕不开它的基础原理；</li><li>最后感谢部门同事@yangfengyu和@chenhan的帮助，让我有<code>get</code>了一个新技能。</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.jianshu.com/p/79d27f200bcf" target="_blank" rel="noopener">简书_Golang并发：并发协程的优雅退出</a><br><a href="https://zhuanlan.zhihu.com/p/75441551" target="_blank" rel="noopener">你真的会用sync.WaitGroup吗</a><br><a href="https://www.dyxmq.cn/program/code/golang/waitgroup-in-golang.html" target="_blank" rel="noopener">起风了_Golang等待组sync.WaitGroup的用法</a></p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;产生静帧的原因&quot;&gt;&lt;a href=&quot;#产生静帧的原因&quot; class=&quot;headerlink&quot; title=&quot;产生静帧的原因&quot;&gt;&lt;/a&gt;产生静帧的原
      
    
    </summary>
    
    
      <category term="解决方案记录" scheme="https://octopuslian.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
      <category term="协程" scheme="https://octopuslian.github.io/tags/%E5%8D%8F%E7%A8%8B/"/>
    
      <category term="WaitGroup" scheme="https://octopuslian.github.io/tags/WaitGroup/"/>
    
      <category term="并发" scheme="https://octopuslian.github.io/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-392-is-subsequence | 判断子序列</title>
    <link href="https://octopuslian.github.io/2020/07/31/Leetcode-392-is-subsequence/"/>
    <id>https://octopuslian.github.io/2020/07/31/Leetcode-392-is-subsequence/</id>
    <published>2020-07-31T00:42:20.000Z</published>
    <updated>2020-10-02T03:19:18.505Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a href="https://leetcode-cn.com/problems/is-subsequence/" target="_blank" rel="noopener">leetcode中国</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><h3 id="双指针法"><a href="#双指针法" class="headerlink" title="双指针法"></a>双指针法</h3><p>Golang</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isSubsequence</span><span class="params">(s <span class="keyword">string</span>, t <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    n, m := <span class="built_in">len</span>(s), <span class="built_in">len</span>(t)  </span><br><span class="line">    i, j := <span class="number">0</span>, <span class="number">0</span> <span class="comment">//初始化两个指针i,j分别指向s和t初始化的位置</span></span><br><span class="line">    <span class="keyword">for</span> i &lt; n &amp;&amp; j &lt; m &#123;</span><br><span class="line">        <span class="keyword">if</span> s[i] == t[j] &#123;</span><br><span class="line">            i++  <span class="comment">//匹配成功，则i,j同时右移</span></span><br><span class="line">        &#125;</span><br><span class="line">        j++  <span class="comment">//匹配失败，则j右移，i不变</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i == n  <span class="comment">//最终如果i移动到s的末尾，就说明s是t的子序列</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://octopuslian.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="leetcode" scheme="https://octopuslian.github.io/tags/leetcode/"/>
    
      <category term="数组" scheme="https://octopuslian.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>妹妹的中考</title>
    <link href="https://octopuslian.github.io/2020/07/30/sister-zhong-kao/"/>
    <id>https://octopuslian.github.io/2020/07/30/sister-zhong-kao/</id>
    <published>2020-07-30T00:21:23.000Z</published>
    <updated>2020-07-30T00:51:48.639Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><p>这两周一直在忙妹妹的中考，这个月底总算尘埃落定。</p><p>由于今年疫情原因，取消中考体育，所以总分只有750分，妹妹说她考了670分，全市排名1700左右，我觉得可以冲下排名第二、三，保底是排名第四和第五的学校。</p><p>然而最终录取分数线出来后，排名第三的乌鲁木齐市八一中学分数线比妹妹的成绩高了5分，最终被排名第四的乌鲁木齐市八中录取了。</p><p>父母觉得有些遗憾，但只能接受，好在乌鲁木齐市八中也离家比较近，耗时近两周的中考录取终于结束了。</p><p>然而，我突然回想起我的中考，跌跌撞撞中被乌鲁木齐市高级中学实验班录取，巨大的校园和先进的设备吸引了我，还有各种兴趣小组可以参加，邻居们之前还对我家不屑一顾，突然听说我考到了乌鲁木齐市高级中学的时候，羡慕、嫉妒纷至沓来。从那时起我突然明白，原来好学校有时候就像一种荣誉的象征，不光是给自己争气，也是给父母脸上增光。</p><p>时隔多年，我依然庆幸，在高中里遇到的良师益友，影响了我的高考乃至大学生涯。</p><p>中考差5分也算是一次警醒，希望妹妹可以在乌鲁木齐市八中里茁壮成长，期待三年后的高考，也能取得一个满意的结果。</p><p><img src="/2020/07/30/sister-zhong-kao/light.jpg" alt></p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;p&gt;这两周一直在忙妹妹的中考，这个月底总算尘埃落定。&lt;/p&gt;&lt;p&gt;由于今年疫情原因，取消中考体育，所以总分只有750分，妹妹说她考了670分，全市排名1700左
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://octopuslian.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="中考" scheme="https://octopuslian.github.io/tags/%E4%B8%AD%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>以五十步笑百步，则何如？</title>
    <link href="https://octopuslian.github.io/2020/07/26/how-wu-shi-bu-xiao-bai-bu/"/>
    <id>https://octopuslian.github.io/2020/07/26/how-wu-shi-bu-xiao-bai-bu/</id>
    <published>2020-07-26T02:24:30.000Z</published>
    <updated>2020-07-30T00:48:45.983Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><p><strong>以五十步笑百步，则何如？</strong>——出自《孟子•梁惠王上》：孟子对曰：“王好战，请以战喻。填然鼓之。兵刃既接，弃甲曳兵而走。或百步而后止，或五十步而后止。以五十步笑百步，则何如？”曰：“不可。直不百步耳，是亦走也。”</p><p>为什么我会突然想起这段对话呢，源于前几个月发生的一起事情。</p><p>我记得当时在吃午饭，同事A突然觉得找不到什么新鲜话题了，对同事B说，坐你之前座位的同事C，写代码真是烂的一批，写的程序经常出错叫别人来解决，有一次出现的问题是他传输一个数据给另一个服务，结果还没传输到就没了，一直找不到原因，结果同事A看了同事C的代码后，说你还没将数据传到另一端的时候自己主动释放掉了。听完同事B哈哈大笑，笑的没玩没了，吃完饭的时候在电梯里又再笑个不停。我在想至于吗？大家都是搬砖的，无非就是你搬砖快一些，人家搬砖慢一些，没必要一直嘲笑吧？！</p><p>结果过了一段时间，同事A和同事B在业务上有合作，然而同事A那边测试总是出问题，找同事B来讨论原因，结果同事A大怒，说你自己写的东西不测试一下的吗？我用的是你封装好的接口，我这边要测试的话也不清楚你写的程序到底有没有出问题，结果你都不测试以下就提交上去了啊。然后同事B默不作声。</p><p>我突然觉得有些可笑，果然大家都习惯于发现别人身上的缺点，从来不会先在自己身上找缺点。</p><p>我又想起我刚毕业入职写程序的时候，因为逻辑不通，总是去请教一个工作比我多3-5年经验的同事，每次我都是去虚心请教，结果就是被他说一顿，然后再给旁边的同事分享这“快乐的片段”，我每次看到他得意的表情，都会怒火中烧，却仍然要保持表情上的平静。也许，这就是职场给我上的一课————<strong>控制情绪，面不改色，然后在深夜里不动声色的提升自己，静待转机出现</strong>。</p><p>以五十步笑百步，在我看来五十步和百步的性质是一样的，只是时间上的长短罢了。</p><p><img src="/2020/07/26/how-wu-shi-bu-xiao-bai-bu/ren.jpg" alt></p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;p&gt;&lt;strong&gt;以五十步笑百步，则何如？&lt;/strong&gt;——出自《孟子•梁惠王上》：孟子对曰：“王好战，请以战喻。填然鼓之。兵刃既接，弃甲曳兵而走。或百步
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://octopuslian.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="嘲笑" scheme="https://octopuslian.github.io/tags/%E5%98%B2%E7%AC%91/"/>
    
      <category term="同事" scheme="https://octopuslian.github.io/tags/%E5%90%8C%E4%BA%8B/"/>
    
      <category term="职场" scheme="https://octopuslian.github.io/tags/%E8%81%8C%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Cooking_新疆大盘鸡</title>
    <link href="https://octopuslian.github.io/2020/07/19/cooking-xin-jiang-da-pan-ji/"/>
    <id>https://octopuslian.github.io/2020/07/19/cooking-xin-jiang-da-pan-ji/</id>
    <published>2020-07-19T11:42:23.000Z</published>
    <updated>2020-07-19T14:47:51.859Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>一个土豆</li><li>一个红椒</li><li>半只鸡</li><li>4个蒜</li><li>盐、鸡精、冰糖、胡椒粉、八角</li></ul><p><img src="/2020/07/19/cooking-xin-jiang-da-pan-ji/1.jpg" alt></p><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><ul><li>热油放冰糖<br>上色</li></ul><p><img src="/2020/07/19/cooking-xin-jiang-da-pan-ji/2.jpg" alt></p><ul><li>油烧焦红色时倒入鸡肉翻炒</li></ul><p><img src="/2020/07/19/cooking-xin-jiang-da-pan-ji/3.jpg" alt></p><ul><li><p>翻炒直到鸡肉有颜色（3-5分钟）</p></li><li><p>倒入蒜，料酒，酱油，味极鲜翻炒片刻后加八角</p></li><li><p>加热水，盖上锅煮20分钟<br>途中加点盐，花椒粉</p></li></ul><p><img src="/2020/07/19/cooking-xin-jiang-da-pan-ji/4.jpg" alt></p><ul><li>加入土豆块，青椒，红椒，洋葱片烧10分钟左右</li></ul><p><img src="/2020/07/19/cooking-xin-jiang-da-pan-ji/5.jpg" alt></p><ul><li>加入鸡精翻炒一下，出锅</li></ul><p><img src="/2020/07/19/cooking-xin-jiang-da-pan-ji/6.jpg" alt></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>只要勤加练习，也能做出家乡的美味，感谢女友在旁的指导，哈哈哈。</p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;一个土豆&lt;/
      
    
    </summary>
    
    
      <category term="厨艺学习" scheme="https://octopuslian.github.io/categories/%E5%8E%A8%E8%89%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="厨艺" scheme="https://octopuslian.github.io/tags/%E5%8E%A8%E8%89%BA/"/>
    
      <category term="大盘鸡" scheme="https://octopuslian.github.io/tags/%E5%A4%A7%E7%9B%98%E9%B8%A1/"/>
    
      <category term="新疆" scheme="https://octopuslian.github.io/tags/%E6%96%B0%E7%96%86/"/>
    
  </entry>
  
  <entry>
    <title>今天我换了一个新头像</title>
    <link href="https://octopuslian.github.io/2020/07/13/today-i-changed-a-new-avatar/"/>
    <id>https://octopuslian.github.io/2020/07/13/today-i-changed-a-new-avatar/</id>
    <published>2020-07-13T15:15:31.000Z</published>
    <updated>2020-07-13T15:23:57.718Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><p>今天我换了一个新头像，是妹妹亲自用数位板画的，看着蛮可爱的，最下面附带一行小字——“勇敢的去面对把！Neo Zhang”。</p><p>我想这个头像未来会陪伴我几年，甚至十几年，希望未来有一天这个头像可以当做一个计算机大佬象征性的标志（在此先立一个长远的Flag）。</p><p><img src="/2020/07/13/today-i-changed-a-new-avatar/neozhang.png" alt></p><p>另外今天收到了煎鱼哥和徐大两位写的书，总共有5个<code>Go</code>语言相关的项目，还有一章关于<code>Go</code>工具的讲解，我已经迫不及待想要翻阅了。</p><p><img src="/2020/07/13/today-i-changed-a-new-avatar/go-book.jpeg" alt></p><p><img src="/2020/07/13/today-i-changed-a-new-avatar/go-book2.jpeg" alt></p><p>2020下半年，加油！</p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;p&gt;今天我换了一个新头像，是妹妹亲自用数位板画的，看着蛮可爱的，最下面附带一行小字——“勇敢的去面对把！Neo Zhang”。&lt;/p&gt;&lt;p&gt;我想这个头像未来会陪
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://octopuslian.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="头像" scheme="https://octopuslian.github.io/tags/%E5%A4%B4%E5%83%8F/"/>
    
      <category term="换新" scheme="https://octopuslian.github.io/tags/%E6%8D%A2%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>极客时间直播_乔新亮_为什么毕业5年后，同学间的差距越来越大</title>
    <link href="https://octopuslian.github.io/2020/07/07/geekbang-live-why-5-years-after-graduation-the-gap-between-classmates-is-growing/"/>
    <id>https://octopuslian.github.io/2020/07/07/geekbang-live-why-5-years-after-graduation-the-gap-between-classmates-is-growing/</id>
    <published>2020-07-07T12:20:09.000Z</published>
    <updated>2020-07-07T14:03:25.425Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h2 id="直播介绍"><a href="#直播介绍" class="headerlink" title="直播介绍"></a>直播介绍</h2><p>直播嘉宾：乔新亮，彩食鲜CTO</p><h3 id="你将获得"><a href="#你将获得" class="headerlink" title="你将获得"></a>你将获得</h3><ul><li>去做事，提高能力，钱自然会来</li><li>努力是为了提高下限，选择是为了提高上限</li><li>往上去想，往下去做</li><li>领导，只要你敢让我做，我就敢上。</li></ul><h2 id="选择和努力"><a href="#选择和努力" class="headerlink" title="选择和努力"></a>选择和努力</h2><ul><li>逆水行舟，不进则退。5年一道坎，不断提高自己的下限和上限。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">比如30岁当个技术总监，不算老，但30岁还是普通程序员，就很老</span><br><span class="line"></span><br><span class="line">比如40岁当个CTO，不算老，但50岁才是CTO就很老</span><br><span class="line"></span><br><span class="line">五年一道坎，跨不过去就会倒退</span><br></pre></td></tr></table></figure><ul><li><p>居安思危，不要当鸵鸟，问题不会因为你把头埋进沙子就不存在了。</p></li><li><p>连接是人类最大的价值，努力让自己成为一个有价值的点，选择进入更高等级的网络，技术的迭代+学习=跨越网络阶层最高效的方法</p></li><li><p>刚毕业的时候不要在意钱，要在意做事的机会</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果你知道你：10年后，睡前收入，1年等于毕业时10年，17年后，税前收入，1年等于毕业时200年</span><br><span class="line">你会怎么决定？</span><br></pre></td></tr></table></figure><ul><li>站在未来看现在，站在全局看自己</li></ul><h2 id="能力"><a href="#能力" class="headerlink" title="能力"></a>能力</h2><ul><li><p>能力提升很重要，技不压身，一直可以跟随你的是能力</p></li><li><p>T型人才：一竖，专业深度；一横，架构广度</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">专业上，敢于挑战任何人</span><br></pre></td></tr></table></figure><ul><li><p>10年的工作经验 VS 一年的工作经验用了10年</p></li><li><p>深度洞察，看清事物本质</p></li><li><p>逻辑推理，一切都有因果</p></li></ul><h2 id="做事"><a href="#做事" class="headerlink" title="做事"></a>做事</h2><ul><li><p>敢于决策，敢于承担</p></li><li><p>猛将必发于卒伍，为什么我说人活着就要不停的做事</p></li><li><p>只要你敢让我上，我就敢上</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">做砸了，至少还有公司，我还锻炼了能力</span><br><span class="line">做好了，那恭喜</span><br></pre></td></tr></table></figure><ul><li><p>锻炼的机会稍纵即逝，相信领导的眼光</p></li><li><p>往上去想，看清全局；往下去做，脚踏实地</p></li><li><p>契约精神</p></li><li><p>认知到位+彪悍执行=成功交付</p></li><li><p>有问题吗？第一反应——搞定它</p></li><li><p>事情做砸了怎么办？做砸了呗，拼尽权利，轻松心态</p></li><li><p>接受自己一切的不完美，相信自己会成长，丑小鸭不停在进步</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">人最怕否定自己</span><br></pre></td></tr></table></figure><ul><li><p>成长性思维：客观的肯定过去的成就；客观的认识过去存在的问题；接受自己的一切不完美；相信自己会成长。</p></li><li><p>持续学习，学以致用，终身成长</p></li></ul><h2 id="金钱观"><a href="#金钱观" class="headerlink" title="金钱观"></a>金钱观</h2><ul><li><p>为什么每个人都要有财务思维</p></li><li><p>不要为了钱工作，为了能力工作，能力会吸引钱来</p></li><li><p>努力挣钱的目的恰恰不是为了钱，是为了让自己不受钱的困扰，让自己有选择的权力，更是一种经历</p></li><li><p>提升能力可以鱼和熊掌剪得，成就感 VS 金钱</p></li><li><p>提升能力是在赚未来的钱，薪资是赚的当下的钱</p></li><li><p>不要总要立刻看到回报，一切的努力都不会白费，都会有回报</p></li><li><p>方向大致对了，剩下的交给时间，做时间的朋友</p></li><li><p>卓越，top(*10) Talent(一横一竖)</p></li><li><p>把自己当成一个公司经营，明确公司的方向、目标、年度目标、季度目标比月度目标，周度目标重要，价值投资、趋势投资、投机投资</p></li></ul><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><ul><li><p>一个人的时间非常少</p></li><li><p>少看朋友圈，多读书</p></li><li><p>每时每刻，专注那一刹那</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">专注谈方案，读一小时书，陪小孩玩，吃午饭，和别人聊天</span><br></pre></td></tr></table></figure><h2 id="心态"><a href="#心态" class="headerlink" title="心态"></a>心态</h2><ul><li><p>乐趣，专注与平静，心在身上，活在当下</p></li><li><p>享受专注的乐趣，想想自己喜欢的运动，比如打羽毛球，工作中，专注做一件事</p></li><li><p>多巴胺——经历新鲜、刺激或具有挑战性的事情；内啡肽有低变高——成就感、运动、深呼吸；血清素——健康饮食和锻炼</p></li><li><p>人啊，一定要活的真实一点，别装</p></li><li><p>热爱生活</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>成功者的叙事风格，会将一切都归纳于自己的先知先觉；</p></li><li><p>成长性思维；</p></li><li><p>站在未来看现在，站在全局看自己；</p></li><li><p>做T字型人才；</p></li><li><p>努力和选择是一个事情的两个方面（人生状态），都很重要；</p></li><li><p>专注，心在身上，感受自己心灵的平静，感受自己做事的乐趣。</p></li></ul><h2 id="答疑"><a href="#答疑" class="headerlink" title="答疑"></a>答疑</h2><ul><li><p>如何跳出舒适区？<br>结论：如果舒适了，就要考虑跳出来。</p></li><li><p>怎么找到领域导师，让自己更有深度？<br>沟通，观察。</p></li></ul><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;直播介绍&quot;&gt;&lt;a href=&quot;#直播介绍&quot; class=&quot;headerlink&quot; title=&quot;直播介绍&quot;&gt;&lt;/a&gt;直播介绍&lt;/h2&gt;&lt;p&gt;直播嘉
      
    
    </summary>
    
    
      <category term="直播分享" scheme="https://octopuslian.github.io/categories/%E7%9B%B4%E6%92%AD%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="成长" scheme="https://octopuslian.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
      <category term="毕业" scheme="https://octopuslian.github.io/tags/%E6%AF%95%E4%B8%9A/"/>
    
      <category term="极客邦" scheme="https://octopuslian.github.io/tags/%E6%9E%81%E5%AE%A2%E9%82%A6/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode_1480_running-sum-of-1d-array | 一维数组的动态和</title>
    <link href="https://octopuslian.github.io/2020/07/03/Leetcode-1480-running-sum-of-1d-array/"/>
    <id>https://octopuslian.github.io/2020/07/03/Leetcode-1480-running-sum-of-1d-array/</id>
    <published>2020-07-03T15:25:40.000Z</published>
    <updated>2020-10-02T03:21:08.840Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p><a href="https://leetcode-cn.com/problems/running-sum-of-1d-array/" target="_blank" rel="noopener">leetcode中国</a></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>设置中间变量，循环一次，记录一次元素和，遍历完后返回结果。</p><ul><li>Golang</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">runningSum</span><span class="params">(nums []<span class="keyword">int</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">//中间变量，一边循环，一边保存元素和</span></span><br><span class="line">    sum := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(nums);i++ &#123;</span><br><span class="line">        <span class="comment">//将索引小于等于i的全部元素相加，赋值索引为i的元素</span></span><br><span class="line">        sum += nums[i]</span><br><span class="line">        nums[i] = sum</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://octopuslian.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="leetcode" scheme="https://octopuslian.github.io/tags/leetcode/"/>
    
      <category term="数组" scheme="https://octopuslian.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="暴力" scheme="https://octopuslian.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>第一次皮肤护理体验记录</title>
    <link href="https://octopuslian.github.io/2020/06/27/skin79-ba-wang-can-first-skin-care-notes/"/>
    <id>https://octopuslian.github.io/2020/06/27/skin79-ba-wang-can-first-skin-care-notes/</id>
    <published>2020-06-27T07:06:54.000Z</published>
    <updated>2020-06-27T07:36:32.349Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><p>上周六用霸王餐去体验了一次皮肤护理，现将学习到的知识记录下来。</p><h2 id="皮肤检测"><a href="#皮肤检测" class="headerlink" title="皮肤检测"></a>皮肤检测</h2><p>首先，因为是第一次做护理，需要对皮肤做一次检测。</p><p>店长会拿一个仪器，类似放大镜，但又可以检测到皮肤下面的情况，于是在检测了一定时间后，得到如下结论：</p><ul><li>皮肤年龄，正常；</li><li>皮肤黑头，在T字区比较多；</li><li>皮肤干燥程度，脸颊两侧较严重；</li><li>皮肤红血丝，脸面有些多。</li></ul><p>之后给出方案，建议7-10天做一次皮肤清理，大概要做8次；皮肤修复大概做4-5次。</p><p>平时少吃辣，别熬夜，最晚11点就需要入睡，护肤品尽量选择氨基酸的，面膜选择医用蒸馏水面膜。</p><p>最后店长还说，你这情况不算严重，至少你每天早晚都用洗面奶水乳霜，保护的还不错。</p><p>接着便体验皮肤清理了。</p><h2 id="皮肤清理"><a href="#皮肤清理" class="headerlink" title="皮肤清理"></a>皮肤清理</h2><p>躺在一张床上，先用卸妆水摸遍全脸，然后用一种可以喷出热气的机器将脸上的毛孔打开，</p><p>接着用小气泡（感觉是利用大气压强原理，在皮肤和玻璃罩内构建一个压强，然后将皮肤里面的脏东西洗出来，再用蒸馏水清理掉，继续吸）清理一遍脸，</p><p>接着用铲鼻机（超声波震动原理，我是感觉不到震动的，然后将黑头震出来，再用铲鼻机头铲掉）清除黑头，这个过程有些长，</p><p>接着就是补水阶段，需要敷面膜，然后有姐姐帮你涂精华液，</p><p>然后就是用一种类似喷头的机器收缩毛孔，</p><p>接着敷医用蒸馏水面膜，还有泥浆软膜。</p><p>流程结束。</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>做完之后感觉脸清爽许多，不过姐姐建议我晚上还得用补水面膜敷一下，不然脸太干会起皮（不过我还好，就敷了一次）。</p><p>这次体验让我学到了一些护肤上的知识（其实女朋友也在给我讲），还有见识了各种仪器的操作和作用，顺便用我仅存的高中物理化学和生物知识去理解他们的原理，还是很开心的。</p><p>最后办了一张价格还挺实惠的皮肤护理修复体验卡，估计可以用上半年，到时再多学习学习，积累护肤经验。</p><p><img src="/2020/06/27/skin79-ba-wang-can-first-skin-care-notes/hufu.jpg" alt></p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;p&gt;上周六用霸王餐去体验了一次皮肤护理，现将学习到的知识记录下来。&lt;/p&gt;&lt;h2 id=&quot;皮肤检测&quot;&gt;&lt;a href=&quot;#皮肤检测&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="skin-care" scheme="https://octopuslian.github.io/categories/skin-care/"/>
    
    
      <category term="皮肤" scheme="https://octopuslian.github.io/tags/%E7%9A%AE%E8%82%A4/"/>
    
      <category term="护理" scheme="https://octopuslian.github.io/tags/%E6%8A%A4%E7%90%86/"/>
    
      <category term="skin79" scheme="https://octopuslian.github.io/tags/skin79/"/>
    
      <category term="黑头" scheme="https://octopuslian.github.io/tags/%E9%BB%91%E5%A4%B4/"/>
    
      <category term="清理" scheme="https://octopuslian.github.io/tags/%E6%B8%85%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>一位朋友面试字节跳动游戏开发岗经验</title>
    <link href="https://octopuslian.github.io/2020/06/26/a-friend-interview-bytedance-game-develop-experience/"/>
    <id>https://octopuslian.github.io/2020/06/26/a-friend-interview-bytedance-game-develop-experience/</id>
    <published>2020-06-26T10:57:45.000Z</published>
    <updated>2020-06-27T07:02:57.730Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>一位好友在西安某211读研究生，主攻图形学方向，下面是他面试字节跳动游戏开发岗的流程。</p><h2 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h2><p>注：此处略去有关项目经验的问题。</p><ul><li><p>C#接口、抽象类的区别</p></li><li><p>学习Unity的途径和方式</p></li><li><p>面向对象中class和struct的区别</p></li><li><p>C#的垃圾回收机制</p></li><li><p>引用类型、值类型和内存分配</p></li><li><p>堆和栈的区别</p></li><li><p>C++多态、虚表</p></li><li><p>list和vector的区别</p></li><li><p>为什么数组插入数据效率慢，而链表插入数据效率快</p></li><li><p>使用链表插入数据的过程</p></li><li><p>检查一个链表是否形成环路的方法</p></li><li><p>C++：Map和<code>Hash Map</code>的区别_对应_数据结构：红黑树和<code>Hash Map</code>的区别</p></li><li><p>哈希表的原理</p></li><li><p>模板测试和深度测试</p></li><li><p>场景题：在游戏中，怎么判断一次AOE攻击有没有命中这些单位</p></li><li><p>什么叫世界坐标转为局部坐标</p></li><li><p>进程和线程的区别</p></li></ul><p>答疑：</p><ul><li><p>怎么系统学习渲染？<br><code>OpenGL</code>是一个很好的切入点，然后看一下<a href="https://book.douban.com/subject/30296179/" target="_blank" rel="noopener">《Real-Time Rendering, Fourth Edition》</a></p></li><li><p>贵公司的游戏部门2018年新成立，请问做游戏的类型有哪些？<br>北京、杭州、广州、上海都有研发中心，有轻度、中毒、重度游戏，合作发布会多一些。</p></li><li><p>游戏引擎开发的学习路线<br>语言层面：引擎源码需要熟悉，还有C++；其次是渲染，就是读一下<a href="https://book.douban.com/subject/30296179/" target="_blank" rel="noopener">《Real-Time Rendering, Fourth Edition》</a></p></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>大概40分钟的面试，问了<code>C#</code>和<code>C++</code>基础+数据结构+网络，然后是图形学方面的问题。总的来说我个人觉得这位面试官非常和蔼，即使他不知道为什么链表插入效率快，但会通过让他思考链表的插入方式对比数组的插入方式，从而得出链表插入快的结论（虽然到最后这层窗户纸还是没有捅破）。接着便问了很多语言特性和项目上的问题，答疑阶段也给了一些书籍和技术指点，总之给我带来的启发就是：</p><ul><li><p>如果要走游戏引擎开发，<code>C++</code>必不可少；</p></li><li><p>最好做一些和图形学相关的项目；</p></li><li><p>平时刷题时，首先保证要提交通过，其次需要考虑优化。例如插入数据时先考虑数组，其次链表，二叉树，这样也可以帮助自己理清各个数据结构的优缺点；</p></li><li><p>一面主要还是以理论为主，但不可放松对编码能力的训练；</p></li><li><p>最好准备两套回答问题的模板，一套用于回答自己擅长的问题，另一道用于回答自己不擅长的问题。</p></li></ul><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;一位好友在西安某211
      
    
    </summary>
    
    
      <category term="面试经验" scheme="https://octopuslian.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="字节跳动" scheme="https://octopuslian.github.io/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
      <category term="校招" scheme="https://octopuslian.github.io/tags/%E6%A0%A1%E6%8B%9B/"/>
    
      <category term="游戏开发" scheme="https://octopuslian.github.io/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>第一款 iPad 和 Apple Pencil</title>
    <link href="https://octopuslian.github.io/2020/06/22/first-ipad-and-apple-pencil/"/>
    <id>https://octopuslian.github.io/2020/06/22/first-ipad-and-apple-pencil/</id>
    <published>2020-06-22T13:44:34.000Z</published>
    <updated>2020-06-22T14:18:25.207Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><p>今天利用好友推荐的官网教育优惠，终于下单了<code>Apple Pencil 一代</code>！</p><p><img src="/2020/06/22/first-ipad-and-apple-pencil/pencil-edu.png" alt></p><p>虽然比我预想的还要贵一些（因为之前3月底的时候答应一学妹，ipad2018 128g + pencil 2600元搞定），但因为疫情原因，学校迟迟不开学，正好6月1号京东苹果官方旗舰店秒杀<code>ipad2019 128g</code>，于是下单了，无奈<code>pencil</code>一直到618都没有降价（天猫苏宁旗舰店必须要凑单满1000减100即可，买一些没用的，总共要八百多，放弃）。</p><p>朋友说，虽然贵一些，但因为是官网，比较省心，今天终于体会到了。</p><p>希望这两位可以作为我强有力的生产力工具，加油！</p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;p&gt;今天利用好友推荐的官网教育优惠，终于下单了&lt;code&gt;Apple Pencil 一代&lt;/code&gt;！&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/2020/06/22
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://octopuslian.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="ipad" scheme="https://octopuslian.github.io/tags/ipad/"/>
    
      <category term="pencil" scheme="https://octopuslian.github.io/tags/pencil/"/>
    
      <category term="生产力" scheme="https://octopuslian.github.io/tags/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>2020年夏季面试总结</title>
    <link href="https://octopuslian.github.io/2020/06/18/2020-summer-interview-summary/"/>
    <id>https://octopuslian.github.io/2020/06/18/2020-summer-interview-summary/</id>
    <published>2020-06-18T14:04:39.000Z</published>
    <updated>2020-06-27T06:34:49.020Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>工作两年，想看看自己水平怎样，于是在刷了一定题量的<code>LeetCode</code>后，尝试去面试了一些成都的大中型公司，现将面试经验整理如下。</p><h2 id="收获最大的面试"><a href="#收获最大的面试" class="headerlink" title="收获最大的面试"></a>收获最大的面试</h2><h3 id="4月-成都腾讯-微信读书-后台开发"><a href="#4月-成都腾讯-微信读书-后台开发" class="headerlink" title="4月_成都腾讯_微信读书_后台开发"></a>4月_成都腾讯_微信读书_后台开发</h3><p>问了一些<code>Golang</code>基础和<code>MySQL</code>的基础知识，回答的还不错，最后卡在了一道业务场景题和网络经典面试题上，这次面试主要让我明白<strong>大厂面试一定要考虑到业务量巨大和优雅处理异步请求的情况，同时面试前最好做些练习，不然太紧张也不好。</strong></p><h3 id="4月-100课堂-后端开发"><a href="#4月-100课堂-后端开发" class="headerlink" title="4月_100课堂_后端开发"></a>4月_100课堂_后端开发</h3><p>一面技术面，聊了大概一个多小时，让我也算回顾了一些<code>Golang</code>的核心基础，另外考了一道如何实现内置<code>len</code>函数的题，主要看我有没有考虑代码优化。</p><h3 id="5月-平安城科-供应链事业部-Java高级开发"><a href="#5月-平安城科-供应链事业部-Java高级开发" class="headerlink" title="5月_平安城科_供应链事业部_Java高级开发"></a>5月_平安城科_供应链事业部_Java高级开发</h3><p>一上来就问了<code>MySQL</code>的核心原理，把我给整蒙了。后来和面试官闲聊才晓得，他们对原理的要求非常细且深，因为知道原理后就可以知道如何去优化，提升程序的执行效率，期间还给我举了用<code>MySQl</code>的数据算笛卡尔积再做优化的例子，虽然面试凉了，但让我更加懂得学习原理的意义之所在。</p><h3 id="5月-安麦云科技-音频算法"><a href="#5月-安麦云科技-音频算法" class="headerlink" title="5月_安麦云科技_音频算法"></a>5月_安麦云科技_音频算法</h3><p>面试官是一位博士后，闲聊之余才知道这岗位又要懂一些音视频，又要懂一些AI算法，然而我都是只知道皮毛。最后建议我发挥科班的优势，主攻大数据和人工智能领域，<code>Golang</code>的话就是高并发场景，因为音视频领域有一些我目前无法短时间内补上的短板。</p><h2 id="一般般的面试"><a href="#一般般的面试" class="headerlink" title="一般般的面试"></a>一般般的面试</h2><h3 id="4月-星网智慧-媒体开发工程师-星网锐捷-音视频软件工程师"><a href="#4月-星网智慧-媒体开发工程师-星网锐捷-音视频软件工程师" class="headerlink" title="4月_星网智慧_媒体开发工程师+星网锐捷_音视频软件工程师"></a>4月_星网智慧_媒体开发工程师+星网锐捷_音视频软件工程师</h3><p>都是和视音频相关的岗位，开发语言<code>C/C++</code>，问了一些数据结构、网络七层模型、<code>Apache</code>、<code>docker</code>与虚拟机、进程和线程方面的知识。</p><h3 id="5月-育碧软件-Graphics-Programmer"><a href="#5月-育碧软件-Graphics-Programmer" class="headerlink" title="5月_育碧软件_Graphics-Programmer"></a>5月_育碧软件_Graphics-Programmer</h3><p>一家做游戏的外企，无奈我图形学的项目经验不超过一年，<code>C++</code>也懂得不多，不过最后还是建议我可以利用业余时间做一些和游戏、图形学方面的<code>demo</code>，到时再去面试的话通过的几率会大一些。另外英语最好熟练听说读写基本技能。</p><h3 id="5月-北京尘锋信息技术-golang研发工程师"><a href="#5月-北京尘锋信息技术-golang研发工程师" class="headerlink" title="5月_北京尘锋信息技术_golang研发工程师"></a>5月_北京尘锋信息技术_golang研发工程师</h3><p>很平常的一家公司，主要做<code>CRM</code>。面试官人挺好，问了我一些<code>Golang</code>基础，还有业务场景举例分析，还跟我闲聊了一下程序员这个行业，最后估计是因为嫌我到岗时间比较晚，所以放弃。</p><h3 id="邮政易通公司外包-C语言开发工程师"><a href="#邮政易通公司外包-C语言开发工程师" class="headerlink" title="邮政易通公司外包_C语言开发工程师"></a>邮政易通公司外包_C语言开发工程师</h3><p>电话面试大概半个多小时，聊了C语言和数据库的基础，最后问了我能否接受外包，嗯…肯定不能接受。</p><h3 id="内推-阿里巴巴-OPPO-字节跳动-ThoughtWorks-研发"><a href="#内推-阿里巴巴-OPPO-字节跳动-ThoughtWorks-研发" class="headerlink" title="内推_阿里巴巴/OPPO/字节跳动/ThoughtWorks/_研发"></a>内推_阿里巴巴/OPPO/字节跳动/ThoughtWorks/_研发</h3><p>在此非常感谢给我内推机会的大佬们，虽然官方给出的答案是社招至少三年以上，但是我觉得提前一年先试试水也挺好的。</p><h2 id="吐槽及避坑"><a href="#吐槽及避坑" class="headerlink" title="吐槽及避坑"></a>吐槽及避坑</h2><p>面试的公司多了，难免会遇到一些不爽的企业，在此仅仅通过个人目前的阅历和经验，给出我自己认为正确的判断，仅供参考。</p><h3 id="5月-100课堂HR和管理"><a href="#5月-100课堂HR和管理" class="headerlink" title="5月_100课堂HR和管理"></a>5月_100课堂HR和管理</h3><p>强烈吐槽这样的<code>HR</code>，面试完了也不说话，吱一声能把你咋样？<br>我下班了跑过去面试了两轮，技术面也过了，最后通过内部关系，负责人很可笑的给出了一个“哦，我把这个人的面试给忘了，我目前想招个Golang高级点的”。<br>呵呵，你要招高级的岗位，那你职位描述上为什么写着经验1-3年或经验不限？不想招人就请直说，别浪费彼此的时间！！！</p><h3 id="5月-中天智慧-Golang开发工程师"><a href="#5月-中天智慧-Golang开发工程师" class="headerlink" title="5月_中天智慧_Golang开发工程师"></a>5月_中天智慧_Golang开发工程师</h3><p>面试就考了五道<code>Golang</code>填空题，也许是我习惯用编辑器的缘故，还有一些偏门语法我没有用过，导致结果不是很理想，然后面试官和HR就开始pua我：“你目前能力还不是很强，招进来风险有些大，不过我们还是愿意给你这个入职的机会，请你尽快入职哦，因为我们还有一个离职且条件比你好的备胎，你要是不愿意入职我就找他聊了，所以请尽快给我答复！”（注：薪资是平薪过去）。<br>我有些恼火，但还是有礼貌的说了句：“我放弃入职，请把机会给那位离职的老哥吧。”<br>过了半小时左右，<code>HR</code>慌了，问我是因为入职时间是不是太紧了延后一些你看怎么样，工资是不是低了，给你涨1000怎么样。<br>果然，<code>HR</code>的话不可信，果断拒绝。</p><p><img src="/2020/06/18/2020-summer-interview-summary/hrpua.jpg" alt></p><p>招人就坦诚一些，别想那么多花花肠子，我是程序员，但不是只沉迷与代码，你这样（指<code>HR</code>）只会让我感到恶心。</p><h3 id="6月-四川隧唐科技-Golang服务器开发"><a href="#6月-四川隧唐科技-Golang服务器开发" class="headerlink" title="6月_四川隧唐科技_Golang服务器开发"></a>6月_四川隧唐科技_Golang服务器开发</h3><p>这是我面试到现在唯一一家明确表明是<strong>不缴纳公积金</strong>的企业。</p><p>笔试+三轮面试表现良好，问及期望薪资时我给了一个范围，最后也不出所料的被录用，但是谈到薪资的时候让我大失所望，果然像这种连五险一金基本福利都不健全的小公司，不能抱有太大希望。</p><p>另外我也利用搜索引擎查到了这家公司曾有拖欠员工工资的不良记录，所以果断拒绝。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>当被面试官或<code>HR</code>贬低或旁击侧敲的说你技术很差，但我们愿意给你机会时，首先需要对自己有个清醒的认识，其次认定这家公司的这个岗位是不是自己真的想去的；</p></li><li><p>给某某银行做业务的xx科技公司，基本都是外包或驻厂开发，慎重选择；</p></li><li><p>面试前最好先问清对方能给的期望薪资大概是多少，这样也确认自己是否值得为此跑一趟；</p></li><li><p>面试时不要慌，坦然面对，当问及盲区的时候，可以让面试官给一些提示，实在不会就跳过；</p></li><li><p>五险一金是下限，连这个都不满足的企业，建议慎重选择。</p></li><li><p>刷题还是很有用的，这是面试的下限，项目和潜力是你的上限，欢迎大家一起来贡献<code>LeetCode</code>题目解法-<a href="https://github.com/OctopusLian/leetcode-solutions" target="_blank" rel="noopener">地址</a></p></li><li><p>谈薪资要有底气，就跟做买卖，可以谈价格的，不要觉得<code>HR</code>给多少就是板上钉钉的事。</p></li></ul><p>如果觉得我写得不错或有用，欢迎转发，让更多的人避坑。</p><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:12 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;工作两年，想看看自己水
      
    
    </summary>
    
    
      <category term="面试经验" scheme="https://octopuslian.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="面试" scheme="https://octopuslian.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="经验" scheme="https://octopuslian.github.io/tags/%E7%BB%8F%E9%AA%8C/"/>
    
      <category term="夏季" scheme="https://octopuslian.github.io/tags/%E5%A4%8F%E5%AD%A3/"/>
    
  </entry>
  
  <entry>
    <title>程序员如何阅读英语资料</title>
    <link href="https://octopuslian.github.io/2020/06/17/how-programmers-read-english-materials/"/>
    <id>https://octopuslian.github.io/2020/06/17/how-programmers-read-english-materials/</id>
    <published>2020-06-17T13:38:26.000Z</published>
    <updated>2020-06-17T14:07:18.001Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --><h2 id="Rule-of-Five"><a href="#Rule-of-Five" class="headerlink" title="Rule of Five"></a>Rule of Five</h2><p><strong>“三天打渔两天晒网”是学英语的大忌。Consistency 是最重要的。</strong></p><p><img src="/2020/06/17/how-programmers-read-english-materials/rule-of-five.jpg" alt></p><p>每天你哪怕只认识一个单词，连着 365 天，你也可以有很大的成就，对吧？你每天哪怕只看两段文章，你一定要看；每天哪怕只听 5 分钟，你一定要听。这个才是练一项技能最重要的。一定要持久，而不是心血来潮去强调它的强度，要细水长流，水滴石穿。</p><p>今天我突然发现自己太忙了，没有办法看 5 页，我只能看两段，可以的，没问题，这个不算违反规则。没有时间的话，你做少一点，都没有关系。这是一个基本的方法，这也是学习唯一的方法。</p><h2 id="关于词汇"><a href="#关于词汇" class="headerlink" title="关于词汇"></a>关于词汇</h2><p><img src="/2020/06/17/how-programmers-read-english-materials/cihui.jpg" alt></p><p><strong>学词汇，不要背字典，我再跟你们强调，千万不要背字典。</strong></p><p><strong>首先，要找一本自己比较习惯使用的一个字典。</strong>我比较推荐用朗文词典。因为朗文词典上面有标准的真人朗读的音标和例句，还会告诉你美英怎么读音，英音怎么读。另外，它的解释也比较简单，用低级的词来解释高级的词。有的词典会用比较高级的词来解释一些低级的词，越查越糊涂。</p><p><strong>我让大家不要背单词，另一个原因是，词组其实更重要，</strong>特别是动词。动词有千变万化的词组，它后面可能跟 20 个不同的介词，这样的话就出来 20 个不同的意思，还有一些搭配。</p><p>在英语里，1 万个单词里有 2000 个单词是真正核心单词，你要把它学透。</p><p>所有那些你看了好像能想起来，但平时不跟你说话的叫被动词汇。天天跟你说话、经常跟你联系的叫主动词汇，那是真正的好朋友。那么主动词汇怎么学呢？</p><ul><li><p>第一，要知道它怎么读。</p></li><li><p>第二，要读它的例句。除此之外，这些词你要自己学会造句。你可以在例句基础之上你来做一个 preference。你可以去改写一下例句，把它变成自己的话。造句之后还没有完，你还要有意识地去主动运用你今天学的词汇，比如说你要给自己创造一个条件，比如今天给别人要写个 Email，或者在论坛上面要发个 issue 等等。刻意地去用一下词汇，然后多用几次之后，这个就变成你的主动词汇了。</p></li><li><p>定制一本自己的词汇手册。</p></li><li><p>或者用卡片，把卡片分成三大堆。第一堆是你已经背熟的，你真正的好朋友。第二堆是你刚刚认识的还不太熟的。第三堆是你今天记下来的完全不熟的。慢慢地把第三堆变成第二堆、第 1 堆。当然，第一堆也要经常拿出来复习一下。长久不联系，这个人也就生疏了，对吧？跟交朋友一样的道理，质量永远比数量要来得重要。这些核心词汇，你一定要把它吃透，这些才是你最后才能够用得出来的词。</p></li></ul><h2 id="关于语法"><a href="#关于语法" class="headerlink" title="关于语法"></a>关于语法</h2><p><img src="/2020/06/17/how-programmers-read-english-materials/yufa.jpg" alt></p><p><strong>看语法书、刷语法题，不是掌握语法的最好的途径。大量的阅读才是掌握语法的最好的方法。</strong></p><p>语法就是我们认识一座新城市的地图。</p><p>看地图也是有技巧的，切记不要夸大地图的作用。</p><p>语法永远是为内容服务，你不是为了学语法而学语法。</p><h2 id="关于阅读"><a href="#关于阅读" class="headerlink" title="关于阅读"></a>关于阅读</h2><p><img src="/2020/06/17/how-programmers-read-english-materials/yuedu.jpg" alt></p><p><strong>你要养成一个习惯。每天坚持多读一点，多少没关系，设定一个小一点的目标。另外，读的时候，要把所有的干扰全部都关掉，不要一心多用。</strong></p><p>读的话一定要读自己感兴趣的内容，不要硬逼自己去读不感兴趣的内容。</p><p>难易度一定要适中，不要去读自己完全看不懂的东西。</p><p><strong>阅读，读的永远是它的思想。读完一篇文章，你知道他讲了什么，它的中心思想是什么，而不是读某一个单词或者读某一个句子。</strong></p><h2 id="答疑"><a href="#答疑" class="headerlink" title="答疑"></a>答疑</h2><h3 id="有必要背诵新概念吗？"><a href="#有必要背诵新概念吗？" class="headerlink" title="有必要背诵新概念吗？"></a>有必要背诵新概念吗？</h3><p>如果你觉得不是那么难的话，我建议你还是要背下来。不要把背诵英文的这个目的太局限化。我们不是为了背而背，而是为了模仿语音语调。你可以找到原版的英国人的录音，去模仿他的语音语调。然后，你自己找一支录音笔，把自己背诵的内容录下来自己听。听完了之后，你再去对照原来新概念的录音，比较一下，看看差别在哪里。</p><p>练语音语调没有第二种方法，只能是模仿。新概念是一个比较好的模仿材料。它的难度相对来说比较适中，是从容易到难循序渐进的。如果你模仿得非常像，从第 1 册开始，一般背到第 3 册，你的语音语调基本上就没有什么太大的问题了。</p><h3 id="怎样才能读懂长难句？"><a href="#怎样才能读懂长难句？" class="headerlink" title="怎样才能读懂长难句？"></a>怎样才能读懂长难句？</h3><p>首先，你要了解英文句式的特点。中文的句子像一列火车，它就是一个车厢接一个车厢，一句话你可以用逗号一直点下去。但是英文它是一棵树，你永远可以找出它的主干，然后你可以找出它的树枝，找到树枝上面的花或者果实。你可以剥洋葱一样把它剥开，之后你大概就知道它是什么意思了，然后你在脑子里面再给它组织在一起就可以了。</p><p>再长的长句、难句，多么变态的句子，我们都可以找到主干。英语的长句怎么读？先从找主干开始。</p><h3 id="看美剧有帮助吗？"><a href="#看美剧有帮助吗？" class="headerlink" title="看美剧有帮助吗？"></a>看美剧有帮助吗？</h3><p>看美剧当然是有帮助的，而且毫无疑问会有很大的益处。</p><p>世界上所有的语言，我们可以粗粗地把它分成两类。一类我们叫 formal English，正式的英语，比如你做演讲的时候或者公司领导做报告的时候，那个时候都是讲很正式的英语。我们平时在课堂当中学的也都是这些 formal English。这些句子非常工整，主谓宾能够非常清楚地找出来的，用的词也都非常正式。</p><p>而我们美剧中大部分都是生活领域的，我们有时候叫 casual English，有时候也叫 kitchen English。不是说它 informal，只是它是比较日常的用语。你看美剧里面，人家插科打诨或者讲一个 joke，你听不懂，因为这个是日常生活的用语，往往是我们学英语的短板，是课堂当中没学过的。</p><h3 id="翻译文章是不是提高阅读能力比较自然的方法？"><a href="#翻译文章是不是提高阅读能力比较自然的方法？" class="headerlink" title="翻译文章是不是提高阅读能力比较自然的方法？"></a>翻译文章是不是提高阅读能力比较自然的方法？</h3><p>不是。除非你的工作跟翻译有关系，你需要把那篇文章翻成中文，或者把中文翻成英文，你有工作上面的需要，否则的话，没事不要去练翻译，浪费时间。阅读就是阅读，不要在阅读的过程当中，把每一篇文章都想着把它给它翻成中文，没有必要。你要 think in English，你要用英文学英文。阅读，你把它理解了就好了。</p><p>但是反过来，当你要把中文翻成英文的时候，这个时候考查的其实并不是你的翻译，考查的是你的英文写作能力。大家老觉得，是我翻译技巧不好，或者是我翻译上面是不是什么东西没学？不是的。</p><p>比如说，一篇 Email，你脑子里面想好中文了，你要把它用英文表达出来，你觉得有困难。你想用英文把一件事情讲清楚，但是你讲不清楚，或者你原本可以用 5 个字讲清楚，绕来绕去，现在你要用 50 个字才能讲清楚。这个不是你翻译技巧有问题，而是你英文不够好。所以，在整个学习的过程当中，只要打英语听说读写的基础就可以了。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>刻意的练习其实是一个 active training，是一个需要你主动投入一些精力，非常专注的、抱着一些特定的目的去寻求一些教练的反馈，然后通过不断接收反馈找到自己练习过程当中的问题，再进行下一轮有意识的练习的过程。</p></li><li><p>练习，我们一直在强调，要重持久，而不是重你的练习强度。</p></li></ul><!-- rebuild by neat --><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"9b0e6a8ee9514649c4e7","clientSecret":"93f2b2b36da58f64f4353d6d5b7f6005a9f80d7c","repo":"octopuslian.github.io","owner":"OctopusLian","admin":["OctopusLian"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Oct 19 2020 08:38:13 GMT+0800 (CST) --&gt;&lt;h2 id=&quot;Rule-of-Five&quot;&gt;&lt;a href=&quot;#Rule-of-Five&quot; class=&quot;headerlink&quot; title=&quot;Rule of F
      
    
    </summary>
    
    
      <category term="English-Study" scheme="https://octopuslian.github.io/categories/English-Study/"/>
    
    
      <category term="英语阅读" scheme="https://octopuslian.github.io/tags/%E8%8B%B1%E8%AF%AD%E9%98%85%E8%AF%BB/"/>
    
      <category term="程序员" scheme="https://octopuslian.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
</feed>
